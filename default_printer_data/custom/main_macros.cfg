######################################################################################################
##..................................................................................................##
##   G-Code macro definition file include via printer.cfg                                           ##
##                                                                                                  ##
##   Created by: Grant Kelly on 17JAN24                                                             ##
##   All macros contained in this file were originally created with a Monoprice Ultimate2           ##
##                                                                                                  ##
##   Klipper for the Monoprice Ultimate 2: https://github.com/fr4nk1yn/klipper                      ##
##..................................................................................................##
######################################################################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: BASE_CANCEL_PRINT
gcode:
  G28
  G92 E0
  G1 E-5 F100
  G92 E0
  TURN_OFF_HEATERS
  SET_GCODE_OFFSET Z=0
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro START_PRINT]
description: Slicer "start g-code" macro
gcode:
  RESPOND PREFIX="INFO: " MSG="Beginning START_PRINT macro for current file..."
  # Set variables for parameters sent from slicer
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
  {% set LAYER_HEIGHT = params.LAYER_HEIGHT|default(0.3)|float %}
  {% set Z_OFF = params.Z_OFF|default(0.0)|float %}
  {% set VERIFY = params.VERIFY|default(1)|int %}
  {% set MOE = params.MOE|default(-0.2)|float %}
  {% set SUB = params.SUB|default(1)|int %}
  SAVE_VARIABLE VARIABLE=home_verify_fail VALUE={VERIFY}  
  # Set and wait for temperatures
  RESPOND PREFIX="INFO: " MSG="Warming things up for the print..."
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP} MAXIMUM={BED_TEMP+2.0}
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP} MAXIMUM={EXTRUDER_TEMP+2.0}
  # Wait for heaters to stabilize draw on PSU as it seems to affect Z axis moves
  # and set LCD message for current draw wait period
  RESPOND PREFIX="INFO: " MSG="Wait for a second to allow power draw to stabilize..." 
  M117 Stabilizing power draw...
  G4 P1000
  M117
  RESPOND PREFIX="INFO: " MSG="Checking Z axis move/probe consistency and conditionally applying Z offset..."
  ENDSTOP_LOOP
  G4 P500
  PROBE_LOOP Z_OFF={Z_OFF} SUB={SUB} MOE={MOE}
  G4 P500
  # Clear action value if validations above succeeded
  SAVE_VARIABLE VARIABLE=home_verify_fail VALUE=0
  G90  # Absolute positioning
  M82
  RESPOND PREFIX="INFO: " MSG="Let's draw a wiping line to clear the nozzle..."
  G92 E0  # Reset extruder position
  G1 X185 Y1 Z{LAYER_HEIGHT} F4000
  G1 X5 Y1 Z{LAYER_HEIGHT} E23 F1000
  G0 Z2 F200 # Move buildplate away from printhead for move to print area
  G92 E0 # Reset extruder position again after wiping line
  M400
  RESPOND PREFIX="INFO: " MSG="G-CODE startup section completed...proceeding to print."

[gcode_macro END_PRINT]
description: Slicer "end g-code" macro
gcode:
  # Make sure any offset or other variables are reset
  SET_GCODE_OFFSET Z=0
  # Retract filament
  G92 E0
  G1 E-5 F100
  G92 E0
  # Home bed and extruder
  G28
  # Turn off fan, extruder and bed
  M107
  TURN_OFF_HEATERS
  # Disable steppers
  M84

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 28.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 28.0  ; unretract speed in mm/s
variable_speed_hop        : 10.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : "runout"    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:
