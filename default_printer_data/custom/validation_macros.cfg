######################################################################################################
##..................................................................................................##
##   G-Code macro definition file include via printer.cfg                                           ##
##                                                                                                  ##
##   Created by: Grant Kelly on 17JAN24                                                             ##
##   All macros contained in this file were originally created with a Monoprice Ultimate2           ##
##                                                                                                  ##
##   Klipper for the Monoprice Ultimate 2: https://github.com/fr4nk1yn/klipper                      ##
##..................................................................................................##
######################################################################################################

[gcode_macro VALIDATE_ALL]
description: Call endstop and probe macros
gcode:
  {% set SUB = params.SUB|default(0)|int %}
  {% set MOE = params.MOE|default(-0.2)|float %}
  {% set Z_OFF = params.Z_OFF|default(0.0)|float %}
  RESPOND PREFIX="INFO: " MSG="Beginning endstop trigger and Z axis move/probe validation..."
  ENDSTOP_LOOP
  RESPOND PREFIX="INFO: " MSG="Endstop trigger validation completed..."
  PROBE_LOOP SUB={SUB} MOE={MOE} Z_OFF={Z_OFF}
  RESPOND PREFIX="INFO: " MSG="Z axis move/probe validation completed..."
  RESPOND PREFIX="INFO: " MSG="Endstop trigger and Z axis move/probe validation completed."

[gcode_macro ENDSTOP_LOOP]
description: Endstop trigger state validation macro
gcode:
  {% if (printer.stepper_enable.steppers["stepper_z"]|int) != 1 %}
    G28
    G4 P250
  {% endif %}
  QUERY_ENDSTOPS
  {% for i in range(5) %}
    _ENDSTOP_LOOP_Q LOOP={i}
  {% endfor %}
  _ENDSTOP_LOOP_A

[gcode_macro _ENDSTOP_LOOP_Q]
description: Endstop trigger state validation macro, query state
gcode:
  {% if (printer.query_endstops.last_query["z"]|int) != 1 %}
    {% if params.LOOP|int > 0 %}
      QUERY_ENDSTOPS
    {% endif %}
    {% if params.LOOP|int >= 2 %}
      RESPOND PREFIX="WARN: " MSG="Z axis failing to home, disabling steppers and waiting for 5 seconds..."
      M84
      G4 P5000
    {% endif %}
    _ENDSTOP_LOOP_V
  {% endif %}

[gcode_macro _ENDSTOP_LOOP_V]
description: Endstop trigger state validation macro, evaluate state
gcode:
  {% if (printer.query_endstops.last_query["z"]|int) != 1 %}
    RESPOND PREFIX="INFO: " MSG="Z axis NOT homed...trying again!"
    G28 Z
  {% endif %}

[gcode_macro _ENDSTOP_LOOP_A]
description: Endstop trigger state validation macro, perform action
gcode:
  {% if (printer.query_endstops.last_query["z"]|int) == 1 %}
    RESPOND PREFIX="INFO: " MSG="Z axis homed!"
  {% else %}  
    RESPOND PREFIX="INFO: " MSG="Z axis NOT homed!"
    {% if (printer.save_variables.variables.home_verify_fail|int) == 1 %}
      SAVE_VARIABLE VARIABLE=home_verify_fail VALUE=0
      CANCEL_PRINT
    {% endif %}
  {% endif %}

[gcode_macro PROBE_LOOP]
description: Probe validation macro
gcode:
  {% set SUB = params.SUB|default(0)|int %}
  {% set MOE = params.MOE|default(-0.2)|float %}
  {% set Z_OFF = params.Z_OFF|default(0.0)|float %}
  SAVE_VARIABLE VARIABLE=pos_trig VALUE=0
  SAVE_VARIABLE VARIABLE=probe_sub VALUE={SUB}
  SAVE_VARIABLE VARIABLE=probe_moe VALUE={MOE}
  SAVE_VARIABLE VARIABLE=probe_z_off VALUE={Z_OFF}
  G0 F3000 X90 Y55
  PROBE
  {% for i in range(3) %}
    _PROBE_LOOP_Q LOOP={i}
  {% endfor %}
  _PROBE_LOOP_A

[gcode_macro _PROBE_LOOP_Q]
description: Probe validation macro, query results
gcode:
  {% if (printer.save_variables.variables.pos_trig|int) != 1 %}
    {% if params.LOOP|int > 0 %}
      PROBE
    {% endif %}
    _PROBE_LOOP_V
  {% endif %}

[gcode_macro _PROBE_LOOP_V]
description: Probe validation macro, evaluate results and set values
gcode:
  {% set SUB = (printer.save_variables.variables.probe_sub|int) %}
  {% set MOE = (printer.save_variables.variables.probe_moe|float) %}
  {% set Z_OFF = (printer.save_variables.variables.probe_z_off|float) %}
  {% set Z_PROBE_POS = ((((printer.probe.last_z_result|float) * 1000)|round(0)|int) / 1000)|float %}
  {% set Z_AXIS_POS = ((((printer.gcode_move.position.z|float) * 1000)|round(0)|int) / 1000)|float %}
  {% set Z_DELTA_MOE = ((((((Z_PROBE_POS - Z_AXIS_POS) + MOE)|float) * 1000)|round(0)|int) / 1000)|float %}
  {% set Z_DELTA = (((((Z_PROBE_POS - Z_AXIS_POS)|float) * 1000)|round(0)|int) / 1000)|float %}
  {% if (Z_DELTA_MOE <= -0.3 or Z_DELTA_MOE >= 0.0) and (Z_PROBE_POS <= 0.399 or Z_AXIS_POS <= 0.399) %} # Delta value and the additional margin of error value
    RESPOND PREFIX="INFO: " MSG="Z axis position: {Z_AXIS_POS} and Z probe position: {Z_PROBE_POS}"
    RESPOND PREFIX="INFO: " MSG="Delta adjusted by {MOE}: {Z_DELTA_MOE}"
    RESPOND PREFIX="INFO: " MSG="Raw delta value: {Z_DELTA}"
    RESPOND PREFIX="WARN: " MSG="It looks like the tolerances in this macro need to be adjusted but we'll try again to be sure..."
    G0 Z2 F600
  {% else %}
    RESPOND PREFIX="INFO: " MSG="Z axis position: {Z_AXIS_POS} and Z probe position: {Z_PROBE_POS}"
    RESPOND PREFIX="INFO: " MSG="Delta and MOE {MOE}: {Z_DELTA_MOE}"
    RESPOND PREFIX="INFO: " MSG="Raw delta value: {Z_DELTA}"
    RESPOND PREFIX="INFO: " MSG="Z axis & probe difference within tolerance...moving on!"
    G0 Z2 F600
    SAVE_VARIABLE VARIABLE=pos_trig VALUE=1
    {% if SUB == 1 %}
      SET_GCODE_OFFSET Z={Z_DELTA_MOE + Z_OFF}
      SAVE_VARIABLE VARIABLE=last_gcode_offset_z VALUE={Z_DELTA_MOE + Z_OFF}
    {% endif %}
  {% endif %}  

[gcode_macro _PROBE_LOOP_A]
description: Probe validation macro, perform final actions
gcode:
  SAVE_VARIABLE VARIABLE=probe_sub VALUE=0
  SAVE_VARIABLE VARIABLE=probe_moe VALUE=0.0
  SAVE_VARIABLE VARIABLE=probe_z_off VALUE=0.0
  {% if (printer.save_variables.variables.pos_trig|int) == 1 %}
    RESPOND PREFIX="INFO: " MSG="Probe validation complete!"
  {% else %}  
    RESPOND PREFIX="INFO: " MSG="Probe validation failed!"
    {% if (printer.save_variables.variables.home_verify_fail|int) == 1 %}
      SAVE_VARIABLE VARIABLE=home_verify_fail VALUE=0
      CANCEL_PRINT
    {% endif %}
  {% endif %}
